fn abs() {

}

comptime fn abs(x: num) -> num {
    if $x < 0 {
        return -$x
    }
    return $x
}

comptime fn sign(x: num) -> 1 | 0 | -1 {
    if $x > 0 {
        return 1
    } else if $x == 0 {
        return 0
    } else {
        return -1
    }
}

comptime fn clamp(x: num, min: num, max: num) -> num {

}

comptime fn min(a: num, b: num) -> num {

}

comptime fn max(a: num, b: num) -> num {

}

comptime fn round(x: num) {

}

comptime fn floor(x: num) {

}

comptime fn ceil(x: num) {

}

comptime fn trunc(x: num) {

}

comptime fn fract(x: num) {

}

comptime fn mod(a: num, b: num) {

}

comptime fn rem(a: num, b: num) {
    
}