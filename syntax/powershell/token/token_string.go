// Code generated by "stringer -type=Token -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[IDENT-1]
	_ = x[INT-2]
	_ = x[FLOAT-3]
	_ = x[STRING-4]
	_ = x[ADD-5]
	_ = x[SUB-6]
	_ = x[MUL-7]
	_ = x[DIV-8]
	_ = x[MOD-9]
	_ = x[LPAREN-10]
	_ = x[RPAREN-11]
	_ = x[LBRACK-12]
	_ = x[RBRACK-13]
	_ = x[LBRACE-14]
	_ = x[RBRACE-15]
	_ = x[SEMICOLON-16]
	_ = x[COMMA-17]
	_ = x[DOT-18]
	_ = x[COLON-19]
	_ = x[DOUBLE_COLON-20]
	_ = x[SGLQUOTE-21]
	_ = x[DBLQUOTE-22]
	_ = x[HASH-23]
	_ = x[DELIMITED_CMT_BEGIN-24]
	_ = x[DELIMITED_CMT_END-25]
	_ = x[BEGIN-26]
	_ = x[BREAK-27]
	_ = x[CATCH-28]
	_ = x[CLASS-29]
	_ = x[CONTINUE-30]
	_ = x[DATA-31]
	_ = x[DEFINE-32]
	_ = x[DO-33]
	_ = x[DYNAMICPARAM-34]
	_ = x[ELSE-35]
	_ = x[ELSEIF-36]
	_ = x[END-37]
	_ = x[EXIT-38]
	_ = x[FILTER-39]
	_ = x[FINALLY-40]
	_ = x[FOR-41]
	_ = x[FOREACH-42]
	_ = x[FROM-43]
	_ = x[FUNCTION-44]
	_ = x[IF-45]
	_ = x[IN_KEYWORD-46]
	_ = x[INLINESCRIPT-47]
	_ = x[PARALLEL_KEYWORD-48]
	_ = x[PARAM-49]
	_ = x[PROCESS-50]
	_ = x[RETURN-51]
	_ = x[SWITCH-52]
	_ = x[THROW-53]
	_ = x[TRAP-54]
	_ = x[TRY-55]
	_ = x[UNTIL-56]
	_ = x[USING-57]
	_ = x[VAR-58]
	_ = x[WHILE-59]
	_ = x[WORKFLOW-60]
	_ = x[CONSTANT-61]
	_ = x[ENUM-62]
	_ = x[HIDDEN-63]
	_ = x[INLINE-64]
	_ = x[PARALLEL_SPECIAL-65]
	_ = x[PRIVATE-66]
	_ = x[REQUIRES-67]
	_ = x[STATIC-68]
	_ = x[THROWS-69]
	_ = x[VALIDATE-70]
	_ = x[VALIDATESET-71]
	_ = x[DOLLAR-72]
	_ = x[AT-73]
	_ = x[QUESTION-74]
	_ = x[DOUBLE_QUESTION-75]
	_ = x[ASSIGN-76]
	_ = x[ADD_ASSIGN-77]
	_ = x[SUB_ASSIGN-78]
	_ = x[MUL_ASSIGN-79]
	_ = x[DIV_ASSIGN-80]
	_ = x[MOD_ASSIGN-81]
	_ = x[BAND_ASSIGN-82]
	_ = x[BOR_ASSIGN-83]
	_ = x[BXOR_ASSIGN-84]
	_ = x[SHL_ASSIGN-85]
	_ = x[SHR_ASSIGN-86]
	_ = x[INC-87]
	_ = x[DEC-88]
	_ = x[BAND-89]
	_ = x[BNOT-90]
	_ = x[BOR-91]
	_ = x[BXOR-92]
	_ = x[SHL-93]
	_ = x[SHR-94]
	_ = x[EQ-95]
	_ = x[IEQ-96]
	_ = x[CEQ-97]
	_ = x[NE-98]
	_ = x[INE-99]
	_ = x[CNE-100]
	_ = x[GT-101]
	_ = x[IGT-102]
	_ = x[CGT-103]
	_ = x[GE-104]
	_ = x[IGE-105]
	_ = x[CGE-106]
	_ = x[LT-107]
	_ = x[ILT-108]
	_ = x[CLT-109]
	_ = x[LE-110]
	_ = x[ILE-111]
	_ = x[CLE-112]
	_ = x[LIKE-113]
	_ = x[ILIKE-114]
	_ = x[CLIKE-115]
	_ = x[NOTLIKE-116]
	_ = x[INOTLIKE-117]
	_ = x[CNOTLIKE-118]
	_ = x[MATCH-119]
	_ = x[IMATCH-120]
	_ = x[CMATCH-121]
	_ = x[NOTMATCH-122]
	_ = x[INOTMATCH-123]
	_ = x[CNOTMATCH-124]
	_ = x[REPLACE-125]
	_ = x[IREPLACE-126]
	_ = x[CREPLACE-127]
	_ = x[CONTAINS-128]
	_ = x[ICONTAINS-129]
	_ = x[CCONTAINS-130]
	_ = x[NOTCONTAINS-131]
	_ = x[INOTCONTAINS-132]
	_ = x[CNOTCONTAINS-133]
	_ = x[IN_OPERATOR-134]
	_ = x[NOTIN-135]
	_ = x[AND-136]
	_ = x[OR-137]
	_ = x[NOT-138]
	_ = x[XOR-139]
	_ = x[BITAND-140]
	_ = x[BITOR-141]
	_ = x[BITNOT-142]
	_ = x[PIPE-143]
	_ = x[PIPEAND-144]
	_ = x[PIPEOR-145]
	_ = x[REWRITE-146]
	_ = x[APPEND-147]
	_ = x[REDIRECT-148]
	_ = x[REDIRECT_IN-149]
	_ = x[SPLIT-150]
	_ = x[ISPLIT-151]
	_ = x[JOIN-152]
	_ = x[IS-153]
	_ = x[ISNOT-154]
	_ = x[AS-155]
	_ = x[FORMAT-156]
	_ = x[RANGE-157]
	_ = x[BACKTICK-158]
	_ = x[NEWLINE-159]
	_ = x[WHITESPACE-160]
	_ = x[EOF-161]
}

const _Token_name = "ILLEGALidentifierinteger literalfloat literalstring literal+-*/%()[]{};,.:::'\"#<##>beginbreakcatchclasscontinuedatadefinedodynamicparamelseelseifendexitfilterfinallyforforeachfromfunctionifin (keyword)inlinescriptparallel (keyword)paramprocessreturnswitchthrowtraptryuntilusingvarwhileworkflowconstantenumhiddeninlineparallel (special)privaterequiresstaticthrowsvalidatevalidateset$@???=+=-=*=/=%=-band=-bor=-bxor=-shl=-shr=++---band-bnot-bor-bxor-shl-shr-eq-ieq-ceq-ne-ine-cne-gt-igt-cgt-ge-ige-cge-lt-ilt-clt-le-ile-cle-like-ilike-clike-notlike-inotlike-cnotlike-match-imatch-cmatch-notmatch-inotmatch-cnotmatch-replace-ireplace-creplace-contains-icontains-ccontains-notcontains-inotcontains-cnotcontains-in-notin-and-or-not-xor&|!|&&||>>>>&1<-split-isplit-join-is-isnot-as-f..`\\nwhitespaceEOF"

var _Token_index = [...]uint16{0, 7, 17, 32, 45, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 88, 93, 98, 103, 111, 115, 121, 123, 135, 139, 145, 148, 152, 158, 165, 168, 175, 179, 187, 189, 201, 213, 231, 236, 243, 249, 255, 260, 264, 267, 272, 277, 280, 285, 293, 301, 305, 311, 317, 335, 342, 350, 356, 362, 370, 381, 382, 383, 384, 386, 387, 389, 391, 393, 395, 397, 403, 408, 414, 419, 424, 426, 428, 433, 438, 442, 447, 451, 455, 458, 462, 466, 469, 473, 477, 480, 484, 488, 491, 495, 499, 502, 506, 510, 513, 517, 521, 526, 532, 538, 546, 555, 564, 570, 577, 584, 593, 603, 613, 621, 630, 639, 648, 658, 668, 680, 693, 706, 709, 715, 719, 722, 726, 730, 731, 732, 733, 734, 736, 738, 739, 741, 744, 745, 751, 758, 763, 766, 772, 775, 777, 779, 780, 782, 792, 795}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
