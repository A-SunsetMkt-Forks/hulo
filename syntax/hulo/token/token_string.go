// Code generated by "stringer -type=Token -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[IDENT-2]
	_ = x[NUM-3]
	_ = x[STR-4]
	_ = x[TRUE-5]
	_ = x[FALSE-6]
	_ = x[ASSIGN-7]
	_ = x[PLUS-8]
	_ = x[MINUS-9]
	_ = x[INC-10]
	_ = x[DEC-11]
	_ = x[AT-12]
	_ = x[ASTERISK-13]
	_ = x[SLASH-14]
	_ = x[MOD-15]
	_ = x[POWER-16]
	_ = x[HASH-17]
	_ = x[REFERENCE-18]
	_ = x[OR-19]
	_ = x[AND-20]
	_ = x[CONCAT-21]
	_ = x[LT-22]
	_ = x[GT-23]
	_ = x[EQ-24]
	_ = x[NEQ-25]
	_ = x[LEQ-26]
	_ = x[GEQ-27]
	_ = x[DOCS-28]
	_ = x[COMMA-29]
	_ = x[SEMICOLON-30]
	_ = x[COLON-31]
	_ = x[DOT-32]
	_ = x[NS-33]
	_ = x[LPAREN-34]
	_ = x[RPAREN-35]
	_ = x[LBRACE-36]
	_ = x[RBRACE-37]
	_ = x[LBRACKET-38]
	_ = x[RBRACKET-39]
	_ = x[MODLIT-40]
	_ = x[IMPORT-41]
	_ = x[FROM-42]
	_ = x[AS-43]
	_ = x[LET-44]
	_ = x[VAR-45]
	_ = x[CONST-46]
	_ = x[FN-47]
	_ = x[RETURN-48]
	_ = x[IF-49]
	_ = x[ELSE-50]
	_ = x[MATCH-51]
	_ = x[LOOP-52]
	_ = x[DO-53]
	_ = x[PUB-54]
	_ = x[FINAL-55]
	_ = x[STATIC-56]
	_ = x[COMPTIME-57]
	_ = x[UNSAFE-58]
	_ = x[CLASS-59]
	_ = x[EXTENDS-60]
	_ = x[IMPL-61]
	_ = x[FOR-62]
	_ = x[NEW-63]
	_ = x[DELETE-64]
	_ = x[EXTENSIONS-65]
	_ = x[TRY-66]
	_ = x[CATCH-67]
	_ = x[FINALLY-68]
	_ = x[THROW-69]
	_ = x[THROWS-70]
}

const _Token_name = "ILLEGALEOFIDENTNUMSTRtruefalse=+-++--@*/%**#$||&&&<>==!=<=>=',;:.::(){}[]modimportfromasletvarconstfnreturnifelsematchloopdopubfinalstaticcomptimeunsafeclassextendsimplfornewdeleteextensionstrycatchfinallythrowthrows"

var _Token_index = [...]uint8{0, 7, 10, 15, 18, 21, 25, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 49, 50, 51, 52, 54, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 82, 86, 88, 91, 94, 99, 101, 107, 109, 113, 118, 122, 124, 127, 132, 138, 146, 152, 157, 164, 168, 171, 174, 180, 190, 193, 198, 205, 210, 216}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
