// Code generated by "stringer -type=Token -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[ADD-1]
	_ = x[SUB-2]
	_ = x[MUL-3]
	_ = x[DIV-4]
	_ = x[MOD-5]
	_ = x[EQU-6]
	_ = x[NEQ-7]
	_ = x[LSS-8]
	_ = x[LEQ-9]
	_ = x[GTR-10]
	_ = x[GEQ-11]
	_ = x[AND-12]
	_ = x[OR-13]
	_ = x[NOT-14]
	_ = x[ADD_ASSIGN-15]
	_ = x[SUB_ASSIGN-16]
	_ = x[MUL_ASSIGN-17]
	_ = x[DIV_ASSIGN-18]
	_ = x[MOD_ASSIGN-19]
	_ = x[BITAND-20]
	_ = x[BITOR-21]
	_ = x[BITXOR-22]
	_ = x[ASSIGN-23]
	_ = x[SEMI-24]
	_ = x[EOF-25]
}

const _Token_name = "ILLEGAL+-*/%EQUNEQLSSLEQGTRGEQANDORNOT+=-=*=/=%=&|^=;EOF"

var _Token_index = [...]uint8{0, 7, 8, 9, 10, 11, 12, 15, 18, 21, 24, 27, 30, 33, 35, 38, 40, 42, 44, 46, 48, 49, 50, 51, 52, 53, 56}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
