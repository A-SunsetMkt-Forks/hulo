// Code generated by "stringer -type=Token -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[SglQuote-1]
	_ = x[DblQuote-2]
	_ = x[BckQuote-3]
	_ = x[And-4]
	_ = x[AndAnd-5]
	_ = x[Or-6]
	_ = x[OrOr-7]
	_ = x[OrAnd-8]
	_ = x[Dollar-9]
	_ = x[DollSglQuote-10]
	_ = x[DollDblQuote-11]
	_ = x[DollBrace-12]
	_ = x[DollBrack-13]
	_ = x[DollParen-14]
	_ = x[DollDblParen-15]
	_ = x[LeftBrack-16]
	_ = x[DblLeftBrack-17]
	_ = x[LeftParen-18]
	_ = x[DblLeftParen-19]
	_ = x[RightBrace-20]
	_ = x[RightBrack-21]
	_ = x[RightParen-22]
	_ = x[DblRightParen-23]
	_ = x[Semicolon-24]
	_ = x[DblSemicolon-25]
	_ = x[SemiAnd-26]
	_ = x[DblSemiAnd-27]
	_ = x[SemiOr-28]
	_ = x[ExclMark-29]
	_ = x[Tilde-30]
	_ = x[AddAdd-31]
	_ = x[SubSub-32]
	_ = x[Star-33]
	_ = x[Power-34]
	_ = x[Equal-35]
	_ = x[NotEqual-36]
	_ = x[LessEqual-37]
	_ = x[GreatEqual-38]
	_ = x[AddAssgn-39]
	_ = x[SubAssgn-40]
	_ = x[MulAssgn-41]
	_ = x[QuoAssgn-42]
	_ = x[RemAssgn-43]
	_ = x[AndAssgn-44]
	_ = x[OrAssgn-45]
	_ = x[XorAssgn-46]
	_ = x[ShlAssgn-47]
	_ = x[ShrAssgn-48]
	_ = x[RdrOut-49]
	_ = x[AppOut-50]
	_ = x[RdrIn-51]
	_ = x[RdrInOut-52]
	_ = x[DplIn-53]
	_ = x[DplOut-54]
	_ = x[ClbOut-55]
	_ = x[Hdoc-56]
	_ = x[DashHdoc-57]
	_ = x[WordHdoc-58]
	_ = x[RdrAll-59]
	_ = x[AppAll-60]
	_ = x[CmdIn-61]
	_ = x[CmdOut-62]
	_ = x[Plus-63]
	_ = x[ColPlus-64]
	_ = x[Minus-65]
	_ = x[ColMinus-66]
	_ = x[Quest-67]
	_ = x[ColQuest-68]
	_ = x[Assgn-69]
	_ = x[ColAssgn-70]
	_ = x[Perc-71]
	_ = x[DblPerc-72]
	_ = x[Hash-73]
	_ = x[DblHash-74]
	_ = x[Caret-75]
	_ = x[DblCaret-76]
	_ = x[Comma-77]
	_ = x[DblComma-78]
	_ = x[At-79]
	_ = x[Slash-80]
	_ = x[DblSlash-81]
	_ = x[Colon-82]
	_ = x[TsExists-83]
	_ = x[TsRegFile-84]
	_ = x[TsDirect-85]
	_ = x[TsCharSp-86]
	_ = x[TsBlckSp-87]
	_ = x[TsNmPipe-88]
	_ = x[TsSocket-89]
	_ = x[TsSmbLink-90]
	_ = x[TsSticky-91]
	_ = x[TsGIDSet-92]
	_ = x[TsUIDSet-93]
	_ = x[TsGrpOwn-94]
	_ = x[TsUsrOwn-95]
	_ = x[TsModif-96]
	_ = x[TsRead-97]
	_ = x[TsWrite-98]
	_ = x[TsExec-99]
	_ = x[TsNoEmpty-100]
	_ = x[TsFdTerm-101]
	_ = x[TsEmpStr-102]
	_ = x[TsNempStr-103]
	_ = x[TsOptSet-104]
	_ = x[TsVarSet-105]
	_ = x[TsRefVar-106]
	_ = x[TsReMatch-107]
	_ = x[TsNewer-108]
	_ = x[TsOlder-109]
	_ = x[TsDevIno-110]
	_ = x[TsEql-111]
	_ = x[TsNeq-112]
	_ = x[TsLeq-113]
	_ = x[TsGeq-114]
	_ = x[TsLss-115]
	_ = x[TsGtr-116]
	_ = x[GlobQuest-117]
	_ = x[GlobStar-118]
	_ = x[GlobPlus-119]
	_ = x[GlobAt-120]
	_ = x[GlobExcl-121]
	_ = x[EOF-122]
	_ = x[STRING-123]
	_ = x[NUMBER-124]
}

const _Token_name = "Illegal'\"`&&&||||&$$'$\"${$[$($(([[[(((}])));;;;&;;&;|!~++--***==!=<=>=+=-=*=/=%=&=|=^=<<=>>=>>><<><&>&>|<<<<-<<<&>&>><(>(+:+-:-?:?=:=%%%###^^^,,,@///:-e-f-d-c-b-p-S-L-k-g-u-G-O-N-r-w-x-s-t-z-n-o-v-R=~-nt-ot-ef-eq-ne-le-ge-lt-gt?(*(+(@(!(EOFSTRINGNUMBER"

var _Token_index = [...]uint8{0, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 23, 25, 27, 29, 32, 33, 35, 36, 38, 39, 40, 41, 43, 44, 46, 48, 51, 53, 54, 55, 57, 59, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 89, 92, 93, 95, 96, 98, 100, 102, 104, 106, 109, 112, 114, 117, 119, 121, 122, 124, 125, 127, 128, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 145, 146, 147, 149, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 203, 206, 209, 212, 215, 218, 221, 224, 227, 229, 231, 233, 235, 237, 240, 246, 252}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
