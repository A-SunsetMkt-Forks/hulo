// Code generated by "stringer -type=Token -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[SglQuote-1]
	_ = x[DblQuote-2]
	_ = x[BckQuote-3]
	_ = x[And-4]
	_ = x[AndAnd-5]
	_ = x[Or-6]
	_ = x[OrOr-7]
	_ = x[OrAnd-8]
	_ = x[Dollar-9]
	_ = x[DollSglQuote-10]
	_ = x[DollDblQuote-11]
	_ = x[DollBrace-12]
	_ = x[DollBrack-13]
	_ = x[DollParen-14]
	_ = x[DollDblParen-15]
	_ = x[LeftBrace-16]
	_ = x[LeftBrack-17]
	_ = x[DblLeftBrack-18]
	_ = x[LeftParen-19]
	_ = x[DblLeftParen-20]
	_ = x[RightBrace-21]
	_ = x[RightBrack-22]
	_ = x[RightParen-23]
	_ = x[DblRightParen-24]
	_ = x[Semicolon-25]
	_ = x[DblSemicolon-26]
	_ = x[SemiAnd-27]
	_ = x[DblSemiAnd-28]
	_ = x[SemiOr-29]
	_ = x[ExclMark-30]
	_ = x[Tilde-31]
	_ = x[AddAdd-32]
	_ = x[SubSub-33]
	_ = x[Star-34]
	_ = x[Power-35]
	_ = x[Equal-36]
	_ = x[NotEqual-37]
	_ = x[LessEqual-38]
	_ = x[GreatEqual-39]
	_ = x[AddAssgn-40]
	_ = x[SubAssgn-41]
	_ = x[MulAssgn-42]
	_ = x[QuoAssgn-43]
	_ = x[RemAssgn-44]
	_ = x[AndAssgn-45]
	_ = x[OrAssgn-46]
	_ = x[XorAssgn-47]
	_ = x[ShlAssgn-48]
	_ = x[ShrAssgn-49]
	_ = x[RdrOut-50]
	_ = x[AppOut-51]
	_ = x[RdrIn-52]
	_ = x[RdrInOut-53]
	_ = x[DplIn-54]
	_ = x[DplOut-55]
	_ = x[ClbOut-56]
	_ = x[Hdoc-57]
	_ = x[DashHdoc-58]
	_ = x[WordHdoc-59]
	_ = x[RdrAll-60]
	_ = x[AppAll-61]
	_ = x[CmdIn-62]
	_ = x[CmdOut-63]
	_ = x[Plus-64]
	_ = x[ColPlus-65]
	_ = x[Minus-66]
	_ = x[ColMinus-67]
	_ = x[Quest-68]
	_ = x[ColQuest-69]
	_ = x[Assgn-70]
	_ = x[ColAssgn-71]
	_ = x[Perc-72]
	_ = x[DblPerc-73]
	_ = x[Hash-74]
	_ = x[DblHash-75]
	_ = x[Caret-76]
	_ = x[DblCaret-77]
	_ = x[Comma-78]
	_ = x[DblComma-79]
	_ = x[At-80]
	_ = x[Slash-81]
	_ = x[DblSlash-82]
	_ = x[Colon-83]
	_ = x[TsExists-84]
	_ = x[TsRegFile-85]
	_ = x[TsDirect-86]
	_ = x[TsCharSp-87]
	_ = x[TsBlckSp-88]
	_ = x[TsNmPipe-89]
	_ = x[TsSocket-90]
	_ = x[TsSmbLink-91]
	_ = x[TsSticky-92]
	_ = x[TsGIDSet-93]
	_ = x[TsUIDSet-94]
	_ = x[TsGrpOwn-95]
	_ = x[TsUsrOwn-96]
	_ = x[TsModif-97]
	_ = x[TsRead-98]
	_ = x[TsWrite-99]
	_ = x[TsExec-100]
	_ = x[TsNoEmpty-101]
	_ = x[TsFdTerm-102]
	_ = x[TsEmpStr-103]
	_ = x[TsNempStr-104]
	_ = x[TsOptSet-105]
	_ = x[TsVarSet-106]
	_ = x[TsRefVar-107]
	_ = x[TsReMatch-108]
	_ = x[TsNewer-109]
	_ = x[TsOlder-110]
	_ = x[TsDevIno-111]
	_ = x[TsEql-112]
	_ = x[TsNeq-113]
	_ = x[TsLeq-114]
	_ = x[TsGeq-115]
	_ = x[TsLss-116]
	_ = x[TsGtr-117]
	_ = x[GlobQuest-118]
	_ = x[GlobStar-119]
	_ = x[GlobPlus-120]
	_ = x[GlobAt-121]
	_ = x[GlobExcl-122]
	_ = x[EOF-123]
}

const _Token_name = "Illegal'\"`&&&||||&$$'$\"${$[$($(({[[[(((}])));;;;&;;&;|!~++--***==!=<=>=+=-=*=/=%=&=|=^=<<=>>=>>><<><&>&>|<<<<-<<<&>&>><(>(+:+-:-?:?=:=%%%###^^^,,,@///:-e-f-d-c-b-p-S-L-k-g-u-G-O-N-r-w-x-s-t-z-n-o-v-R=~-nt-ot-ef-eq-ne-le-ge-lt-gt?(*(+(@(!(EOF"

var _Token_index = [...]uint8{0, 7, 8, 9, 10, 11, 13, 14, 16, 18, 19, 21, 23, 25, 27, 29, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 47, 49, 52, 54, 55, 56, 58, 60, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 90, 93, 94, 96, 97, 99, 101, 103, 105, 107, 110, 113, 115, 118, 120, 122, 123, 125, 126, 128, 129, 131, 132, 134, 135, 137, 138, 140, 141, 143, 144, 146, 147, 148, 150, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 230, 232, 234, 236, 238, 241}

func (i Token) String() string {
	if i >= Token(len(_Token_index)-1) {
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Token_name[_Token_index[i]:_Token_index[i+1]]
}
