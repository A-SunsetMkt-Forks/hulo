// Code generated by "stringer -type=Operator -linecomment"; DO NOT EDIT.

package object

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpIllegal-0]
	_ = x[OpAdd-1]
	_ = x[OpSub-2]
	_ = x[OpMul-3]
	_ = x[OpDiv-4]
	_ = x[OpMod-5]
	_ = x[OpConcat-6]
	_ = x[OpAnd-7]
	_ = x[OpOr-8]
	_ = x[OpEqual-9]
	_ = x[OpNot-10]
	_ = x[OpLess-11]
	_ = x[OpLessEqual-12]
	_ = x[OpGreater-13]
	_ = x[OpGreaterEqual-14]
	_ = x[OpAssign-15]
	_ = x[OpIndex-16]
	_ = x[OpCall-17]
	_ = x[Opa-18]
	_ = x[Opb-19]
	_ = x[Opc-20]
	_ = x[Opd-21]
	_ = x[Ope-22]
	_ = x[Opf-23]
	_ = x[Opg-24]
	_ = x[Oph-25]
	_ = x[Opi-26]
	_ = x[Opj-27]
	_ = x[Opk-28]
	_ = x[Opl-29]
	_ = x[Opm-30]
	_ = x[Opn-31]
	_ = x[Opo-32]
	_ = x[Opp-33]
	_ = x[Opq-34]
	_ = x[Opr-35]
	_ = x[Ops-36]
	_ = x[Ott-37]
	_ = x[Opu-38]
	_ = x[Opv-39]
	_ = x[Opw-40]
	_ = x[Opz-41]
	_ = x[OpA-42]
	_ = x[OpB-43]
	_ = x[OpC-44]
	_ = x[OpD-45]
	_ = x[OpE-46]
	_ = x[OpF-47]
	_ = x[OpG-48]
	_ = x[OpH-49]
	_ = x[OpI-50]
	_ = x[OpJ-51]
	_ = x[OpK-52]
	_ = x[OpL-53]
	_ = x[OpM-54]
	_ = x[OpN-55]
	_ = x[OpO-56]
	_ = x[OpP-57]
	_ = x[OpQ-58]
	_ = x[OpR-59]
	_ = x[OpS-60]
	_ = x[OpT-61]
	_ = x[OpU-62]
	_ = x[OpV-63]
	_ = x[OpW-64]
	_ = x[OpX-65]
	_ = x[OpY-66]
	_ = x[OpZ-67]
}

const _Operator_name = "OpIllegal+-*/%..&&||==!<<=>>==[]()a\"\"b\"\"c\"\"d\"\"e\"\"f\"\"g\"\"h\"\"i\"\"j\"\"k\"\"l\"\"m\"\"n\"\"o\"\"p\"\"q\"\"r\"\"s\"\"t\"\"u\"\"v\"\"w\"\"z\"\"A\"\"B\"\"C\"\"D\"\"E\"\"F\"\"G\"\"H\"\"I\"\"J\"\"K\"\"L\"\"M\"\"N\"\"O\"\"P\"\"Q\"\"R\"\"S\"\"T\"\"U\"\"V\"\"W\"\"X\"\"Y\"\"Z\"\""

var _Operator_index = [...]uint8{0, 9, 10, 11, 12, 13, 14, 16, 18, 20, 22, 23, 24, 26, 27, 29, 30, 32, 34, 37, 40, 43, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 175, 178, 181, 184}

func (i Operator) String() string {
	if i < 0 || i >= Operator(len(_Operator_index)-1) {
		return "Operator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Operator_name[_Operator_index[i]:_Operator_index[i+1]]
}
