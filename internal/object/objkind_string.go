// Code generated by "stringer -type=ObjKind -linecomment"; DO NOT EDIT.

package object

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[O_NUM-0]
	_ = x[O_STR-1]
	_ = x[O_BOOL-2]
	_ = x[O_SYMBOL-3]
	_ = x[O_ARR-4]
	_ = x[O_TUPLE-5]
	_ = x[O_SET-6]
	_ = x[O_OBJ-7]
	_ = x[O_MAP-8]
	_ = x[O_FUNC-9]
	_ = x[O_NULL-10]
	_ = x[O_ANY-11]
	_ = x[O_VOID-12]
	_ = x[O_NEVER-13]
	_ = x[O_ERROR-14]
	_ = x[O_TRAIT-15]
	_ = x[O_CLASS-16]
	_ = x[O_ENUM-17]
	_ = x[O_BUILTIN-18]
	_ = x[O_LITERAL-19]
	_ = x[O_RET-20]
	_ = x[O_QUOTE-21]
	_ = x[O_UNION-22]
	_ = x[O_INTERSECTION-23]
	_ = x[O_NULLABLE-24]
	_ = x[O_DECORATOR-25]
	_ = x[O_TYPE_PARAM-26]
}

const _ObjKind_name = "numstrboolsymbolarrtuplesetobjectmapfuncnullanyvoidnevererrortraitclassenumO_BUILTINO_LITERALO_RETO_QUOTEunionintersectionnullabledecoratortype_param"

var _ObjKind_index = [...]uint8{0, 3, 6, 10, 16, 19, 24, 27, 33, 36, 40, 44, 47, 51, 56, 61, 66, 71, 75, 84, 93, 98, 105, 110, 122, 130, 139, 149}

func (i ObjKind) String() string {
	if i < 0 || i >= ObjKind(len(_ObjKind_index)-1) {
		return "ObjKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ObjKind_name[_ObjKind_index[i]:_ObjKind_index[i+1]]
}
