// Code generated from unsafeLexer.g4 by ANTLR 4.13.2. DO NOT EDIT.

package generated

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type unsafeLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var UnsafeLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func unsafelexerLexerInit() {
	staticData := &UnsafeLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "COMMENT_MODE", "EXPRESSION_MODE", "STATEMENT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'{#'", "'{{'", "'{%'", "", "'#}'", "", "'}}'", "", "", "'{'", "'}'",
		"'#'", "'%'", "'$'", "'|'", "','", "':='", "'.'", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "'%}'", "", "", "'if'", "'else'",
		"'loop'", "'in'", "'macro'", "'end'", "'endif'", "'endloop'", "'endmacro'",
	}
	staticData.SymbolicNames = []string{
		"", "COMMENT_START", "EXPR_START", "STMT_START", "TEXT", "COMMENT_END",
		"COMMENT_CONTENT", "EXPR_END", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
		"HASH", "MOD", "DOLLAR", "PIPE", "COMMA", "COLON_EQUAL", "DOT", "EQ",
		"NE", "GT", "LT", "GE", "LE", "AND", "OR", "NOT", "STRING", "NUMBER",
		"BOOLEAN", "IDENTIFIER", "WS", "STMT_END", "LPAREN_STMT", "RPAREN_STMT",
		"IF", "ELSE", "LOOP", "IN", "MACRO", "END", "ENDIF", "ENDLOOP", "ENDMACRO",
		"EQ_STMT", "NE_STMT", "GT_STMT", "LT_STMT", "GE_STMT", "LE_STMT", "AND_STMT",
		"OR_STMT", "NOT_STMT", "STRING_STMT", "NUMBER_STMT", "BOOLEAN_STMT",
		"IDENTIFIER_STMT", "WS_STMT",
	}
	staticData.RuleNames = []string{
		"COMMENT_START", "EXPR_START", "STMT_START", "TEXT", "TRUE", "FALSE",
		"Identifier", "SINGLE_QUOTE", "QUOTE", "ESC", "String", "Number", "COMMENT_END",
		"COMMENT_CONTENT", "EXPR_END", "LPAREN", "RPAREN", "LBRACE", "RBRACE",
		"HASH", "MOD", "DOLLAR", "PIPE", "COMMA", "COLON_EQUAL", "DOT", "EQ",
		"NE", "GT", "LT", "GE", "LE", "AND", "OR", "NOT", "STRING", "NUMBER",
		"BOOLEAN", "IDENTIFIER", "WS", "STMT_END", "LPAREN_STMT", "RPAREN_STMT",
		"IF", "ELSE", "LOOP", "IN", "MACRO", "END", "ENDIF", "ENDLOOP", "ENDMACRO",
		"EQ_STMT", "NE_STMT", "GT_STMT", "LT_STMT", "GE_STMT", "LE_STMT", "AND_STMT",
		"OR_STMT", "NOT_STMT", "STRING_STMT", "NUMBER_STMT", "BOOLEAN_STMT",
		"IDENTIFIER_STMT", "WS_STMT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 58, 408, 6, -1, 6, -1, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2,
		7, 2, 2, 3, 7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8,
		7, 8, 2, 9, 7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13,
		2, 14, 7, 14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2,
		19, 7, 19, 2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24,
		7, 24, 2, 25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7,
		29, 2, 30, 7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34,
		2, 35, 7, 35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2,
		40, 7, 40, 2, 41, 7, 41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45,
		7, 45, 2, 46, 7, 46, 2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7,
		50, 2, 51, 7, 51, 2, 52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 2, 55, 7, 55,
		2, 56, 7, 56, 2, 57, 7, 57, 2, 58, 7, 58, 2, 59, 7, 59, 2, 60, 7, 60, 2,
		61, 7, 61, 2, 62, 7, 62, 2, 63, 7, 63, 2, 64, 7, 64, 2, 65, 7, 65, 1, 0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 2, 1, 3, 4, 3, 153, 8, 3, 11, 3, 12, 3, 154, 1, 4, 1, 4, 1, 4,
		1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 5, 6, 170,
		8, 6, 10, 6, 12, 6, 173, 9, 6, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9,
		1, 10, 1, 10, 1, 10, 5, 10, 185, 8, 10, 10, 10, 12, 10, 188, 9, 10, 1,
		10, 1, 10, 1, 10, 1, 10, 1, 10, 5, 10, 195, 8, 10, 10, 10, 12, 10, 198,
		9, 10, 1, 10, 1, 10, 3, 10, 202, 8, 10, 1, 11, 3, 11, 205, 8, 11, 1, 11,
		4, 11, 208, 8, 11, 11, 11, 12, 11, 209, 1, 11, 1, 11, 4, 11, 214, 8, 11,
		11, 11, 12, 11, 215, 3, 11, 218, 8, 11, 1, 11, 1, 11, 3, 11, 222, 8, 11,
		1, 11, 4, 11, 225, 8, 11, 11, 11, 12, 11, 226, 3, 11, 229, 8, 11, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 4, 13, 237, 8, 13, 11, 13, 12, 13, 238,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1,
		17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1, 22,
		1, 23, 1, 23, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1,
		27, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1, 31,
		1, 31, 1, 31, 1, 32, 1, 32, 1, 32, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1,
		35, 1, 35, 1, 36, 1, 36, 1, 37, 1, 37, 3, 37, 299, 8, 37, 1, 38, 1, 38,
		1, 39, 4, 39, 304, 8, 39, 11, 39, 12, 39, 305, 1, 39, 1, 39, 1, 40, 1,
		40, 1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43,
		1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 45, 1, 45, 1, 45, 1, 45, 1, 45, 1,
		46, 1, 46, 1, 46, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 47, 1, 48, 1, 48,
		1, 48, 1, 48, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 49, 1, 50, 1, 50, 1,
		50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 50, 1, 51, 1, 51, 1, 51, 1, 51, 1, 51,
		1, 51, 1, 51, 1, 51, 1, 51, 1, 52, 1, 52, 1, 52, 1, 53, 1, 53, 1, 53, 1,
		54, 1, 54, 1, 55, 1, 55, 1, 56, 1, 56, 1, 56, 1, 57, 1, 57, 1, 57, 1, 58,
		1, 58, 1, 58, 1, 59, 1, 59, 1, 59, 1, 60, 1, 60, 1, 61, 1, 61, 1, 62, 1,
		62, 1, 63, 1, 63, 3, 63, 398, 8, 63, 1, 64, 1, 64, 1, 65, 4, 65, 403, 8,
		65, 11, 65, 12, 65, 404, 1, 65, 1, 65, 0, 0, 66, 4, 1, 6, 2, 8, 3, 10,
		4, 12, 0, 14, 0, 16, 0, 18, 0, 20, 0, 22, 0, 24, 0, 26, 0, 28, 5, 30, 6,
		32, 7, 34, 8, 36, 9, 38, 10, 40, 11, 42, 12, 44, 13, 46, 14, 48, 15, 50,
		16, 52, 17, 54, 18, 56, 19, 58, 20, 60, 21, 62, 22, 64, 23, 66, 24, 68,
		25, 70, 26, 72, 27, 74, 28, 76, 29, 78, 30, 80, 31, 82, 32, 84, 33, 86,
		34, 88, 35, 90, 36, 92, 37, 94, 38, 96, 39, 98, 40, 100, 41, 102, 42, 104,
		43, 106, 44, 108, 45, 110, 46, 112, 47, 114, 48, 116, 49, 118, 50, 120,
		51, 122, 52, 124, 53, 126, 54, 128, 55, 130, 56, 132, 57, 134, 58, 4, 0,
		1, 2, 3, 11, 1, 0, 123, 123, 3, 0, 65, 90, 95, 95, 97, 122, 4, 0, 48, 57,
		65, 90, 95, 95, 97, 122, 8, 0, 34, 34, 39, 39, 92, 92, 98, 98, 102, 102,
		110, 110, 114, 114, 116, 116, 3, 0, 10, 10, 39, 39, 92, 92, 3, 0, 10, 10,
		34, 34, 92, 92, 1, 0, 48, 57, 2, 0, 69, 69, 101, 101, 2, 0, 43, 43, 45,
		45, 2, 0, 35, 35, 125, 125, 3, 0, 9, 10, 13, 13, 32, 32, 415, 0, 4, 1,
		0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0, 0, 0, 0, 10, 1, 0, 0, 0, 1, 28,
		1, 0, 0, 0, 1, 30, 1, 0, 0, 0, 2, 32, 1, 0, 0, 0, 2, 34, 1, 0, 0, 0, 2,
		36, 1, 0, 0, 0, 2, 38, 1, 0, 0, 0, 2, 40, 1, 0, 0, 0, 2, 42, 1, 0, 0, 0,
		2, 44, 1, 0, 0, 0, 2, 46, 1, 0, 0, 0, 2, 48, 1, 0, 0, 0, 2, 50, 1, 0, 0,
		0, 2, 52, 1, 0, 0, 0, 2, 54, 1, 0, 0, 0, 2, 56, 1, 0, 0, 0, 2, 58, 1, 0,
		0, 0, 2, 60, 1, 0, 0, 0, 2, 62, 1, 0, 0, 0, 2, 64, 1, 0, 0, 0, 2, 66, 1,
		0, 0, 0, 2, 68, 1, 0, 0, 0, 2, 70, 1, 0, 0, 0, 2, 72, 1, 0, 0, 0, 2, 74,
		1, 0, 0, 0, 2, 76, 1, 0, 0, 0, 2, 78, 1, 0, 0, 0, 2, 80, 1, 0, 0, 0, 2,
		82, 1, 0, 0, 0, 3, 84, 1, 0, 0, 0, 3, 86, 1, 0, 0, 0, 3, 88, 1, 0, 0, 0,
		3, 90, 1, 0, 0, 0, 3, 92, 1, 0, 0, 0, 3, 94, 1, 0, 0, 0, 3, 96, 1, 0, 0,
		0, 3, 98, 1, 0, 0, 0, 3, 100, 1, 0, 0, 0, 3, 102, 1, 0, 0, 0, 3, 104, 1,
		0, 0, 0, 3, 106, 1, 0, 0, 0, 3, 108, 1, 0, 0, 0, 3, 110, 1, 0, 0, 0, 3,
		112, 1, 0, 0, 0, 3, 114, 1, 0, 0, 0, 3, 116, 1, 0, 0, 0, 3, 118, 1, 0,
		0, 0, 3, 120, 1, 0, 0, 0, 3, 122, 1, 0, 0, 0, 3, 124, 1, 0, 0, 0, 3, 126,
		1, 0, 0, 0, 3, 128, 1, 0, 0, 0, 3, 130, 1, 0, 0, 0, 3, 132, 1, 0, 0, 0,
		3, 134, 1, 0, 0, 0, 4, 136, 1, 0, 0, 0, 6, 141, 1, 0, 0, 0, 8, 146, 1,
		0, 0, 0, 10, 152, 1, 0, 0, 0, 12, 156, 1, 0, 0, 0, 14, 161, 1, 0, 0, 0,
		16, 167, 1, 0, 0, 0, 18, 174, 1, 0, 0, 0, 20, 176, 1, 0, 0, 0, 22, 178,
		1, 0, 0, 0, 24, 201, 1, 0, 0, 0, 26, 204, 1, 0, 0, 0, 28, 230, 1, 0, 0,
		0, 30, 236, 1, 0, 0, 0, 32, 240, 1, 0, 0, 0, 34, 245, 1, 0, 0, 0, 36, 247,
		1, 0, 0, 0, 38, 249, 1, 0, 0, 0, 40, 251, 1, 0, 0, 0, 42, 253, 1, 0, 0,
		0, 44, 255, 1, 0, 0, 0, 46, 257, 1, 0, 0, 0, 48, 259, 1, 0, 0, 0, 50, 261,
		1, 0, 0, 0, 52, 263, 1, 0, 0, 0, 54, 266, 1, 0, 0, 0, 56, 268, 1, 0, 0,
		0, 58, 271, 1, 0, 0, 0, 60, 274, 1, 0, 0, 0, 62, 276, 1, 0, 0, 0, 64, 278,
		1, 0, 0, 0, 66, 281, 1, 0, 0, 0, 68, 284, 1, 0, 0, 0, 70, 287, 1, 0, 0,
		0, 72, 290, 1, 0, 0, 0, 74, 292, 1, 0, 0, 0, 76, 294, 1, 0, 0, 0, 78, 298,
		1, 0, 0, 0, 80, 300, 1, 0, 0, 0, 82, 303, 1, 0, 0, 0, 84, 309, 1, 0, 0,
		0, 86, 314, 1, 0, 0, 0, 88, 316, 1, 0, 0, 0, 90, 318, 1, 0, 0, 0, 92, 321,
		1, 0, 0, 0, 94, 326, 1, 0, 0, 0, 96, 331, 1, 0, 0, 0, 98, 334, 1, 0, 0,
		0, 100, 340, 1, 0, 0, 0, 102, 344, 1, 0, 0, 0, 104, 350, 1, 0, 0, 0, 106,
		358, 1, 0, 0, 0, 108, 367, 1, 0, 0, 0, 110, 370, 1, 0, 0, 0, 112, 373,
		1, 0, 0, 0, 114, 375, 1, 0, 0, 0, 116, 377, 1, 0, 0, 0, 118, 380, 1, 0,
		0, 0, 120, 383, 1, 0, 0, 0, 122, 386, 1, 0, 0, 0, 124, 389, 1, 0, 0, 0,
		126, 391, 1, 0, 0, 0, 128, 393, 1, 0, 0, 0, 130, 397, 1, 0, 0, 0, 132,
		399, 1, 0, 0, 0, 134, 402, 1, 0, 0, 0, 136, 137, 5, 123, 0, 0, 137, 138,
		5, 35, 0, 0, 138, 139, 1, 0, 0, 0, 139, 140, 6, 0, 0, 0, 140, 5, 1, 0,
		0, 0, 141, 142, 5, 123, 0, 0, 142, 143, 5, 123, 0, 0, 143, 144, 1, 0, 0,
		0, 144, 145, 6, 1, 1, 0, 145, 7, 1, 0, 0, 0, 146, 147, 5, 123, 0, 0, 147,
		148, 5, 37, 0, 0, 148, 149, 1, 0, 0, 0, 149, 150, 6, 2, 2, 0, 150, 9, 1,
		0, 0, 0, 151, 153, 8, 0, 0, 0, 152, 151, 1, 0, 0, 0, 153, 154, 1, 0, 0,
		0, 154, 152, 1, 0, 0, 0, 154, 155, 1, 0, 0, 0, 155, 11, 1, 0, 0, 0, 156,
		157, 5, 116, 0, 0, 157, 158, 5, 114, 0, 0, 158, 159, 5, 117, 0, 0, 159,
		160, 5, 101, 0, 0, 160, 13, 1, 0, 0, 0, 161, 162, 5, 102, 0, 0, 162, 163,
		5, 97, 0, 0, 163, 164, 5, 108, 0, 0, 164, 165, 5, 115, 0, 0, 165, 166,
		5, 101, 0, 0, 166, 15, 1, 0, 0, 0, 167, 171, 7, 1, 0, 0, 168, 170, 7, 2,
		0, 0, 169, 168, 1, 0, 0, 0, 170, 173, 1, 0, 0, 0, 171, 169, 1, 0, 0, 0,
		171, 172, 1, 0, 0, 0, 172, 17, 1, 0, 0, 0, 173, 171, 1, 0, 0, 0, 174, 175,
		5, 39, 0, 0, 175, 19, 1, 0, 0, 0, 176, 177, 5, 34, 0, 0, 177, 21, 1, 0,
		0, 0, 178, 179, 5, 92, 0, 0, 179, 180, 7, 3, 0, 0, 180, 23, 1, 0, 0, 0,
		181, 186, 3, 18, 7, 0, 182, 185, 3, 22, 9, 0, 183, 185, 8, 4, 0, 0, 184,
		182, 1, 0, 0, 0, 184, 183, 1, 0, 0, 0, 185, 188, 1, 0, 0, 0, 186, 184,
		1, 0, 0, 0, 186, 187, 1, 0, 0, 0, 187, 189, 1, 0, 0, 0, 188, 186, 1, 0,
		0, 0, 189, 190, 3, 18, 7, 0, 190, 202, 1, 0, 0, 0, 191, 196, 3, 20, 8,
		0, 192, 195, 3, 22, 9, 0, 193, 195, 8, 5, 0, 0, 194, 192, 1, 0, 0, 0, 194,
		193, 1, 0, 0, 0, 195, 198, 1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 196, 197,
		1, 0, 0, 0, 197, 199, 1, 0, 0, 0, 198, 196, 1, 0, 0, 0, 199, 200, 3, 20,
		8, 0, 200, 202, 1, 0, 0, 0, 201, 181, 1, 0, 0, 0, 201, 191, 1, 0, 0, 0,
		202, 25, 1, 0, 0, 0, 203, 205, 5, 45, 0, 0, 204, 203, 1, 0, 0, 0, 204,
		205, 1, 0, 0, 0, 205, 207, 1, 0, 0, 0, 206, 208, 7, 6, 0, 0, 207, 206,
		1, 0, 0, 0, 208, 209, 1, 0, 0, 0, 209, 207, 1, 0, 0, 0, 209, 210, 1, 0,
		0, 0, 210, 217, 1, 0, 0, 0, 211, 213, 5, 46, 0, 0, 212, 214, 7, 6, 0, 0,
		213, 212, 1, 0, 0, 0, 214, 215, 1, 0, 0, 0, 215, 213, 1, 0, 0, 0, 215,
		216, 1, 0, 0, 0, 216, 218, 1, 0, 0, 0, 217, 211, 1, 0, 0, 0, 217, 218,
		1, 0, 0, 0, 218, 228, 1, 0, 0, 0, 219, 221, 7, 7, 0, 0, 220, 222, 7, 8,
		0, 0, 221, 220, 1, 0, 0, 0, 221, 222, 1, 0, 0, 0, 222, 224, 1, 0, 0, 0,
		223, 225, 7, 6, 0, 0, 224, 223, 1, 0, 0, 0, 225, 226, 1, 0, 0, 0, 226,
		224, 1, 0, 0, 0, 226, 227, 1, 0, 0, 0, 227, 229, 1, 0, 0, 0, 228, 219,
		1, 0, 0, 0, 228, 229, 1, 0, 0, 0, 229, 27, 1, 0, 0, 0, 230, 231, 5, 35,
		0, 0, 231, 232, 5, 125, 0, 0, 232, 233, 1, 0, 0, 0, 233, 234, 6, 12, 3,
		0, 234, 29, 1, 0, 0, 0, 235, 237, 8, 9, 0, 0, 236, 235, 1, 0, 0, 0, 237,
		238, 1, 0, 0, 0, 238, 236, 1, 0, 0, 0, 238, 239, 1, 0, 0, 0, 239, 31, 1,
		0, 0, 0, 240, 241, 5, 125, 0, 0, 241, 242, 5, 125, 0, 0, 242, 243, 1, 0,
		0, 0, 243, 244, 6, 14, 3, 0, 244, 33, 1, 0, 0, 0, 245, 246, 5, 40, 0, 0,
		246, 35, 1, 0, 0, 0, 247, 248, 5, 41, 0, 0, 248, 37, 1, 0, 0, 0, 249, 250,
		5, 123, 0, 0, 250, 39, 1, 0, 0, 0, 251, 252, 5, 125, 0, 0, 252, 41, 1,
		0, 0, 0, 253, 254, 5, 35, 0, 0, 254, 43, 1, 0, 0, 0, 255, 256, 5, 37, 0,
		0, 256, 45, 1, 0, 0, 0, 257, 258, 5, 36, 0, 0, 258, 47, 1, 0, 0, 0, 259,
		260, 5, 124, 0, 0, 260, 49, 1, 0, 0, 0, 261, 262, 5, 44, 0, 0, 262, 51,
		1, 0, 0, 0, 263, 264, 5, 58, 0, 0, 264, 265, 5, 61, 0, 0, 265, 53, 1, 0,
		0, 0, 266, 267, 5, 46, 0, 0, 267, 55, 1, 0, 0, 0, 268, 269, 5, 61, 0, 0,
		269, 270, 5, 61, 0, 0, 270, 57, 1, 0, 0, 0, 271, 272, 5, 33, 0, 0, 272,
		273, 5, 61, 0, 0, 273, 59, 1, 0, 0, 0, 274, 275, 5, 62, 0, 0, 275, 61,
		1, 0, 0, 0, 276, 277, 5, 60, 0, 0, 277, 63, 1, 0, 0, 0, 278, 279, 5, 62,
		0, 0, 279, 280, 5, 61, 0, 0, 280, 65, 1, 0, 0, 0, 281, 282, 5, 60, 0, 0,
		282, 283, 5, 61, 0, 0, 283, 67, 1, 0, 0, 0, 284, 285, 5, 38, 0, 0, 285,
		286, 5, 38, 0, 0, 286, 69, 1, 0, 0, 0, 287, 288, 5, 124, 0, 0, 288, 289,
		5, 124, 0, 0, 289, 71, 1, 0, 0, 0, 290, 291, 5, 33, 0, 0, 291, 73, 1, 0,
		0, 0, 292, 293, 3, 24, 10, 0, 293, 75, 1, 0, 0, 0, 294, 295, 3, 26, 11,
		0, 295, 77, 1, 0, 0, 0, 296, 299, 3, 12, 4, 0, 297, 299, 3, 14, 5, 0, 298,
		296, 1, 0, 0, 0, 298, 297, 1, 0, 0, 0, 299, 79, 1, 0, 0, 0, 300, 301, 3,
		16, 6, 0, 301, 81, 1, 0, 0, 0, 302, 304, 7, 10, 0, 0, 303, 302, 1, 0, 0,
		0, 304, 305, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 306, 1, 0, 0, 0, 306,
		307, 1, 0, 0, 0, 307, 308, 6, 39, 4, 0, 308, 83, 1, 0, 0, 0, 309, 310,
		5, 37, 0, 0, 310, 311, 5, 125, 0, 0, 311, 312, 1, 0, 0, 0, 312, 313, 6,
		40, 3, 0, 313, 85, 1, 0, 0, 0, 314, 315, 5, 40, 0, 0, 315, 87, 1, 0, 0,
		0, 316, 317, 5, 41, 0, 0, 317, 89, 1, 0, 0, 0, 318, 319, 5, 105, 0, 0,
		319, 320, 5, 102, 0, 0, 320, 91, 1, 0, 0, 0, 321, 322, 5, 101, 0, 0, 322,
		323, 5, 108, 0, 0, 323, 324, 5, 115, 0, 0, 324, 325, 5, 101, 0, 0, 325,
		93, 1, 0, 0, 0, 326, 327, 5, 108, 0, 0, 327, 328, 5, 111, 0, 0, 328, 329,
		5, 111, 0, 0, 329, 330, 5, 112, 0, 0, 330, 95, 1, 0, 0, 0, 331, 332, 5,
		105, 0, 0, 332, 333, 5, 110, 0, 0, 333, 97, 1, 0, 0, 0, 334, 335, 5, 109,
		0, 0, 335, 336, 5, 97, 0, 0, 336, 337, 5, 99, 0, 0, 337, 338, 5, 114, 0,
		0, 338, 339, 5, 111, 0, 0, 339, 99, 1, 0, 0, 0, 340, 341, 5, 101, 0, 0,
		341, 342, 5, 110, 0, 0, 342, 343, 5, 100, 0, 0, 343, 101, 1, 0, 0, 0, 344,
		345, 5, 101, 0, 0, 345, 346, 5, 110, 0, 0, 346, 347, 5, 100, 0, 0, 347,
		348, 5, 105, 0, 0, 348, 349, 5, 102, 0, 0, 349, 103, 1, 0, 0, 0, 350, 351,
		5, 101, 0, 0, 351, 352, 5, 110, 0, 0, 352, 353, 5, 100, 0, 0, 353, 354,
		5, 108, 0, 0, 354, 355, 5, 111, 0, 0, 355, 356, 5, 111, 0, 0, 356, 357,
		5, 112, 0, 0, 357, 105, 1, 0, 0, 0, 358, 359, 5, 101, 0, 0, 359, 360, 5,
		110, 0, 0, 360, 361, 5, 100, 0, 0, 361, 362, 5, 109, 0, 0, 362, 363, 5,
		97, 0, 0, 363, 364, 5, 99, 0, 0, 364, 365, 5, 114, 0, 0, 365, 366, 5, 111,
		0, 0, 366, 107, 1, 0, 0, 0, 367, 368, 5, 61, 0, 0, 368, 369, 5, 61, 0,
		0, 369, 109, 1, 0, 0, 0, 370, 371, 5, 33, 0, 0, 371, 372, 5, 61, 0, 0,
		372, 111, 1, 0, 0, 0, 373, 374, 5, 62, 0, 0, 374, 113, 1, 0, 0, 0, 375,
		376, 5, 60, 0, 0, 376, 115, 1, 0, 0, 0, 377, 378, 5, 62, 0, 0, 378, 379,
		5, 61, 0, 0, 379, 117, 1, 0, 0, 0, 380, 381, 5, 60, 0, 0, 381, 382, 5,
		61, 0, 0, 382, 119, 1, 0, 0, 0, 383, 384, 5, 38, 0, 0, 384, 385, 5, 38,
		0, 0, 385, 121, 1, 0, 0, 0, 386, 387, 5, 124, 0, 0, 387, 388, 5, 124, 0,
		0, 388, 123, 1, 0, 0, 0, 389, 390, 5, 33, 0, 0, 390, 125, 1, 0, 0, 0, 391,
		392, 3, 24, 10, 0, 392, 127, 1, 0, 0, 0, 393, 394, 3, 26, 11, 0, 394, 129,
		1, 0, 0, 0, 395, 398, 3, 12, 4, 0, 396, 398, 3, 14, 5, 0, 397, 395, 1,
		0, 0, 0, 397, 396, 1, 0, 0, 0, 398, 131, 1, 0, 0, 0, 399, 400, 3, 16, 6,
		0, 400, 133, 1, 0, 0, 0, 401, 403, 7, 10, 0, 0, 402, 401, 1, 0, 0, 0, 403,
		404, 1, 0, 0, 0, 404, 402, 1, 0, 0, 0, 404, 405, 1, 0, 0, 0, 405, 406,
		1, 0, 0, 0, 406, 407, 6, 65, 4, 0, 407, 135, 1, 0, 0, 0, 23, 0, 1, 2, 3,
		154, 171, 184, 186, 194, 196, 201, 204, 209, 215, 217, 221, 226, 228, 238,
		298, 305, 397, 404, 5, 5, 1, 0, 5, 2, 0, 5, 3, 0, 4, 0, 0, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// unsafeLexerInit initializes any static state used to implement unsafeLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewunsafeLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func UnsafeLexerInit() {
	staticData := &UnsafeLexerLexerStaticData
	staticData.once.Do(unsafelexerLexerInit)
}

// NewunsafeLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewunsafeLexer(input antlr.CharStream) *unsafeLexer {
	UnsafeLexerInit()
	l := new(unsafeLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &UnsafeLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "unsafeLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// unsafeLexer tokens.
const (
	unsafeLexerCOMMENT_START   = 1
	unsafeLexerEXPR_START      = 2
	unsafeLexerSTMT_START      = 3
	unsafeLexerTEXT            = 4
	unsafeLexerCOMMENT_END     = 5
	unsafeLexerCOMMENT_CONTENT = 6
	unsafeLexerEXPR_END        = 7
	unsafeLexerLPAREN          = 8
	unsafeLexerRPAREN          = 9
	unsafeLexerLBRACE          = 10
	unsafeLexerRBRACE          = 11
	unsafeLexerHASH            = 12
	unsafeLexerMOD             = 13
	unsafeLexerDOLLAR          = 14
	unsafeLexerPIPE            = 15
	unsafeLexerCOMMA           = 16
	unsafeLexerCOLON_EQUAL     = 17
	unsafeLexerDOT             = 18
	unsafeLexerEQ              = 19
	unsafeLexerNE              = 20
	unsafeLexerGT              = 21
	unsafeLexerLT              = 22
	unsafeLexerGE              = 23
	unsafeLexerLE              = 24
	unsafeLexerAND             = 25
	unsafeLexerOR              = 26
	unsafeLexerNOT             = 27
	unsafeLexerSTRING          = 28
	unsafeLexerNUMBER          = 29
	unsafeLexerBOOLEAN         = 30
	unsafeLexerIDENTIFIER      = 31
	unsafeLexerWS              = 32
	unsafeLexerSTMT_END        = 33
	unsafeLexerLPAREN_STMT     = 34
	unsafeLexerRPAREN_STMT     = 35
	unsafeLexerIF              = 36
	unsafeLexerELSE            = 37
	unsafeLexerLOOP            = 38
	unsafeLexerIN              = 39
	unsafeLexerMACRO           = 40
	unsafeLexerEND             = 41
	unsafeLexerENDIF           = 42
	unsafeLexerENDLOOP         = 43
	unsafeLexerENDMACRO        = 44
	unsafeLexerEQ_STMT         = 45
	unsafeLexerNE_STMT         = 46
	unsafeLexerGT_STMT         = 47
	unsafeLexerLT_STMT         = 48
	unsafeLexerGE_STMT         = 49
	unsafeLexerLE_STMT         = 50
	unsafeLexerAND_STMT        = 51
	unsafeLexerOR_STMT         = 52
	unsafeLexerNOT_STMT        = 53
	unsafeLexerSTRING_STMT     = 54
	unsafeLexerNUMBER_STMT     = 55
	unsafeLexerBOOLEAN_STMT    = 56
	unsafeLexerIDENTIFIER_STMT = 57
	unsafeLexerWS_STMT         = 58
)

// unsafeLexer modes.
const (
	unsafeLexerCOMMENT_MODE = iota + 1
	unsafeLexerEXPRESSION_MODE
	unsafeLexerSTATEMENT_MODE
)
